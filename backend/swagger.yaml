swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'https://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: [ ]
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: [ ]
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts:
    get:
      security:
        - Bearer: [ ]
      summary: View all accounts
      description: Retrieve a list of all accounts.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      responses:
        '200':
          description: A list of all accounts.
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
          examples:
            application/json: |
              [
                {
                  "id": 1,
                  "title": "Personal Account",
                  "amount": "$5000.00",
                  "description": "Primary personal account"
                }
              ]
        '404':
          description: No accounts found
  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: [ ]
      summary: View current month's transactions for a specific account
      description: Retrieve a list of transactions for the specified account and month.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          required: true
          description: The ID of the account to retrieve transactions for.
          type: string
        - name: month
          in: query
          required: true
          description: >
            The month for which transactions are being retrieved (format: YYYY-MM).
          type: string
      responses:
        '200':
          description: A list of transactions for the specified account and month.
          schema:
            type: object
            properties:
              transactions:
                type: array
                items:
                  $ref: '#/definitions/Transaction'
          examples:
            application/json: |
              {
                "transactions":[ 
                  {
                    "id": "t1",
                    "date": "2025-01-01",
                    "description": "Grocery shopping",
                    "amount": -50.00,
                    "balance": 950.00                    
                  }
                ]
              }
        '404':
          description: Account not found
  /accounts/{accountId}/transactions/{transactionId}/details:
    get:
      security:
        - Bearer: [ ]
      summary: View transaction details
      description: Retrieve details of a specific transaction.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          required: true
          description: The ID of the account.
          type: string
        - name: transactionId
          in: path
          required: true
          description: The ID of the transaction.
          type: string
      responses:
        '200':
          description: Details of the specified transaction.
          schema:
            $ref: '#/definitions/Transaction'
          examples:
            application/json: |
              {
                "details": {
                  "transactionType": "Electronic",
                  "category": "Charity",
                  "notes": "Helping the next generation"
                }
              }
        '404':
          description: Transaction or account not found
    put:
      security:
        - Bearer: [ ]
      summary: Update transaction details
      description: Update details of a specific transaction.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          required: true
          description: The ID of the account.
          type: string
        - name: transactionId
          in: path
          required: true
          description: The ID of the transaction.
          type: string
        - in: body
          name: body
          description: Details to update
          required: true
          schema:
            type: object
            properties:
              transactionType:
                type: string
              category:
                type: string
              notes:
                type: string
      responses:
        '200':
          description: Transaction details updated.
        '404':
          description: Transaction or account not found
    delete:
      security:
        - Bearer: [ ]
      summary: Delete transaction details
      description: Delete a specific transaction.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          required: true
          description: The ID of the account.
          type: string
        - name: transactionId
          in: path
          required: true
          description: The ID of the transaction.
          type: string
      responses:
        '200':
          description: Transaction details deleted.
        '404':
          description: Transaction or account not found
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
  Login:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Account:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      amount:
        type: string
      description:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
      transactionType:
        type: string
      category:
        type: string
      notes:
        type: string